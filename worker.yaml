---
systemd:
  units:
    - name: docker.service
      enabled: true
    - name: locksmithd.service
      mask: true
    - name: data.mount
      enabled: true
      contents: |
        [Unit]
        Before=local-fs.target
        [Mount]
        What=/dev/xvdc
        Where=/data
        Type=ext4
        [Install]
        WantedBy=local-fs.target
    - name: traefik.service
      enabled: true
      contents: |
        [Unit]
        Description=Traefik
        [Service]
        ExecStartPre=-/usr/bin/docker kill traefik
        ExecStartPre=-/usr/bin/docker rm traefik
        ExecStartPre=/usr/bin/docker pull traefik:${traefic_version}
        ExecStart=/usr/bin/docker run \
          --name traefik \
          -v /data/letsencrypt:/letsencrypt \
          -v /var/run/docker.sock:/var/run/docker.sock:ro \
          -p 80:80 \
          -p 443:443 \
          -e AWS_ACCESS_KEY_ID=${traefic_aws_access_key_id} \
          -e AWS_SECRET_ACCESS_KEY=${traefic_aws_secret_access_key} \
          -e AWS_HOSTED_ZONE_ID=${traefic_hosted_zone_id} \
          -e AWS_REGION=${aws_region} \
          -e MEM_LIMIT=768M \
          traefik:${traefic_version} \
          --providers.docker=true \
          --providers.docker.exposedbydefault=false \
          --entrypoints.http.address=:80 \
          --entrypoints.https.address=:443 \
          --serverstransport.insecureskipverify=true \
          --certificatesresolvers.letsencrypt.acme.dnschallenge=true \
          --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=route53 \
          --certificatesresolvers.letsencrypt.acme.email=${acme_email} \
          --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
        ExecStop=/usr/bin/docker stop traefik
        [Install]
        WantedBy=multi-user.target
    - name: unifi.service
      enabled: true
      contents: |
        [Unit]
        Description=Unifi controller
        [Service]
        ExecStartPre=-/usr/bin/docker kill unifi-controller
        ExecStartPre=-/usr/bin/docker rm unifi-controller
        ExecStartPre=/usr/bin/docker pull ghcr.io/linuxserver/unifi-controller:"${unifi_version}"
        ExecStart=/usr/bin/docker run \
          --name unifi-controller \
          -v /data:/config \
          -e MEM_LIMIT=768M \
          -l "traefik.enable=true" \
          -l "traefik.http.routers.unifi.rule=Host(`unifi.kombor.ski`)" \
          -l "traefik.http.routers.unifi.entrypoints=https" \
          -l "traefik.http.routers.unifi.tls.certresolver=letsencrypt" \
          -l "traefik.http.services.unify.loadbalancer.server.port=8443" \
          -l "traefik.http.services.unify.loadbalancer.server.scheme=https" \
          -l "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https" \
          -l "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true" \
          ghcr.io/linuxserver/unifi-controller:${unifi_version}
        ExecStop=/usr/bin/docker stop unify-controller
        [Install]
        WantedBy=multi-user.target

storage:
  files:
    - path: /etc/sysctl.d/max-user-watches.conf
      filesystem: root
      mode: 0644
      contents:
        inline: |
          fs.inotify.max_user_watches=16184
  filesystems:
    - name: data
      mount:
        device: /dev/xvdc
        format: ext4
        wipe_filesystem: false
        label: DATA
passwd:
  users:
    - name: core
      ssh_authorized_keys:
        - "${ssh_authorized_key}"
